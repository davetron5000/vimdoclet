*java.util.PropertyResourceBundle* *PropertyResourceBundle* PropertyResourceBund

public class PropertyResourceBundle
  extends    |java.util.ResourceBundle|

|java.util.PropertyResourceBundle_Description|
|java.util.PropertyResourceBundle_Fields|
|java.util.PropertyResourceBundle_Constructors|
|java.util.PropertyResourceBundle_Methods|

================================================================================

*java.util.PropertyResourceBundle_Constructors*
|java.util.PropertyResourceBundle(InputStream)|Creates a property resource bund
|java.util.PropertyResourceBundle(Reader)|Creates a property resource bundle fr

*java.util.PropertyResourceBundle_Methods*
|java.util.PropertyResourceBundle.getKeys()|Returns an Enumeration of the keys 
|java.util.PropertyResourceBundle.handleGetObject(String)|
|java.util.PropertyResourceBundle.handleKeySet()|Returns a Set of the keys cont

*java.util.PropertyResourceBundle_Description*

PropertyResourceBundle is a concrete subclass of ResourceBundle that manages 
resources for a locale using a set of static strings from a property file. See 
ResourceBundle(|java.util.ResourceBundle|) for more information about resource 
bundles. 

Unlike other types of resource bundle, you don't subclass 
PropertyResourceBundle. Instead, you supply properties files containing the 
resource data. ResourceBundle.getBundle will automatically look for the 
appropriate properties file and create a PropertyResourceBundle that refers to 
it. See ResourceBundle.getBundle(|java.util.ResourceBundle|) for a complete 
description of the search and instantiation strategy. 

The following example shows a member of a resource bundle family with the base 
name "MyResources". The text defines the bundle "MyResources_de", the German 
member of the bundle family. This member is based on PropertyResourceBundle, 
and the text therefore is the content of the file "MyResources_de.properties" 
(a related example shows how you can add bundles to this family that are 
implemented as subclasses of ListResourceBundle). The keys in this example are 
of the form "s1" etc. The actual keys are entirely up to your choice, so long 
as they are the same as the keys you use in your program to retrieve the 
objects from the bundle. Keys are case-sensitive. 



# MessageFormat pattern s1=Die Platte \"{1}\" enthlt {0}. 

# location of {0} in pattern s2=1 

# sample disk name s3=Meine Platte 

# first ChoiceFormat choice s4=keine Dateien 

# second ChoiceFormat choice s5=eine Datei 

# third ChoiceFormat choice s6={0,number} Dateien 

# sample date s7=3. Mrz 1996 



Note: PropertyResourceBundle can be constructed either from an InputStream or a 
Reader, which represents a property file. Constructing a PropertyResourceBundle 
instance from an InputStream requires that the input stream be encoded in 
ISO-8859-1. In that case, characters that cannot be represented in ISO-8859-1 
encoding must be represented by Unicode Escapes, whereas the other constructor 
which takes a Reader does not have that limitation. 



*java.util.PropertyResourceBundle(InputStream)*

public PropertyResourceBundle(java.io.InputStream stream)
  throws |java.io.IOException|
         
Creates a property resource bundle from an InputStream(|java.io.InputStream|) . 
The property file read with this constructor must be encoded in ISO-8859-1. 

    stream - an InputStream that represents a property file to read from. 

*java.util.PropertyResourceBundle(Reader)*

public PropertyResourceBundle(java.io.Reader reader)
  throws |java.io.IOException|
         
Creates a property resource bundle from a Reader(|java.io.Reader|) . Unlike the 
constructor 
PropertyResourceBundle(InputStream)(|java.util.PropertyResourceBundle|) , there 
is no limitation as to the encoding of the input property file. 

    reader - a Reader that represents a property file to read from. 

*java.util.PropertyResourceBundle.getKeys()*

public |java.util.Enumeration|<String> getKeys()

Returns an Enumeration of the keys contained in this ResourceBundle and its 
parent bundles. 



    Returns: an Enumeration of the keys contained in this ResourceBundle and its parent 
             bundles. 

*java.util.PropertyResourceBundle.handleGetObject(String)*

public |java.lang.Object| handleGetObject(java.lang.String key)





*java.util.PropertyResourceBundle.handleKeySet()*

protected |java.util.Set|<String> handleKeySet()

Returns a Set of the keys contained only in this ResourceBundle. 



    Returns: a Set of the keys contained only in this ResourceBundle 


